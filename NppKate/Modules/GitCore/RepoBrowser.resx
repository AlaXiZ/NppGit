<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ilImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADW
        CwAAAk1TRnQBSQFMAgEBBgEAAVgBAAFYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8AHwADGgElA1wBtgNiAcEDKQE+MAADGgEkAWoBXgFMAbMBdwFkAUkBvwMn
        ATuwAANhAcADRgF/AzgBXANyAegDAQECLAABdAFjAUoBvQFHAUUBQwF7AjYBNQFYAbYBfAEsAeYDAAEB
        rAADaAHSAy0BRQMUARwDeQH2AwQBBiwAAY0BbQFBAdADKwFCAxMBGgHYAYkBFQH0AwMBBKwAAzIBUAN6
        AfcDegH3A2MBxQMGAQgsAAIxATABTQHdAYcBEwH1Ad0BiwESAfYBegFlAUYBwgMFAQewAANyAekDgAH/
        A4AB/wN6AfkDdAHnA1oBrwMfAS0kAAG4AX0BKgHnAf8BlAEAAv8BlAEAAf8B4wGLARIB9wG0AX8BLgHl
        AWUBWwFMAa0DHQEqpAADcgHpA4AB/wNoAdIDgAH9A4AB/wOAAf8DdwHxAxkBIyAAAbgBfQEqAecB/wGU
        AQAB/wGLAW4BQgHPAfYBlAEDAf0B/wGUAQAC/wGUAQAB/wHJAYMBHgHvAxgBIaAAA3IB6QOAAf8DDQER
        AwUBBwMWAR8DXAG2A4AB/wNSAZsgAAG4AX0BKgHnAf8BlAEAAf8DCwEPAwQBBQMVAR0BagFeAUwBswH/
        AZQBAAH/AVcBUQFKAZmgAANyAekDgAH/Aw0BEQgAAx0BKQOAAf8DawHbIAABuAF9ASoB5wH/AZQBAAH/
        AwsBDwgAAxwBJwH/AZQBAAH/AZsBcwE5AdmgAANyAekDgAH/Aw0BEQgAAz4BagOAAf0DegH5Ay0BRhwA
        AbgBfQEqAecB/wGUAQAB/wMLAQ8IAAI9ATwBZwHwAYsBAwH8AeUBjQEPAfgDLAFEnAADcgHpA4AB/wMN
        AREEAAMEAQUDeQH0AxoBJQMxAU0DaAHPHAABuAF9ASoB5wH/AZQBAAH/AwsBDwQAAwMBBAHVAYgBGQHy
        AxkBIwMvAUoBiAFrAUMBzZgAAzIBUAN6AfcDegH3A0MBdgQAAwIBAwN2AewDMQFOA0EBcgNjAcQYAAIx
        ATABTQHdAYcBEwH1Ad0BiwESAfYBQwFCAUEBcwQAAwEBAgG8AX8BJwHqAy8BSgFBAUABPwFvAXoBZQFG
        AcKYAANoAdIDLQFFAxQBHAN5AfYDBAEGBAADLgFIA2gB0ANjAcUDHwEtGAABjQFtAUEB0AMrAUIDEwEa
        AdgBiQEVAfQDAwEEBAADLQFFAYgBawFDAc0BegFlAUYBwgMeASuYAANhAcADRgF+AzgBXANyAegDAQEC
        LAABdAFjAUoBvQFHAUUBQwF7AjYBNQFYAbYBfAEsAeYDAAEBrAADGgElA1wBtgNiAcEDKQE+MAADGgEk
        AWoBXgFMAbMBdwFkAUkBvwMnATv/AP8A/wBzAAMcASgBcAFgAV4BuQF9AWcBYwHFAyoBQTAAAwwBEAMT
        ARoDEwEaAxMBGgMTARoDEwEaAxMBGgMTARoDEwEaAw4BE5gAAXwBZwFhAcQBSwJJAYMBOwI6AWEBwgGB
        AXQB6wMCAQMsAAMXASADQgF0A0oBigNKAYoDSgGLA0oBjANKAYwDSgGLA0IBdAMaASUcAAMiATIBYQFc
        AVgBzwF0AWEBTAHkAzcBWgMWAR8DGQEjAxEBFwMGAQgDAAEBWAABlQFyAWgB1gMvAUkDFgEfAeYBjQF3
        AfkDBgEIMAADRAF8A+YB/wPEAf8CswGxAf8BnQGlAZQB/wGvAb0BqgH/AdEB3wHPAf8DRQF+IAADEwEa
        AYwBdwFKAesB9AG0AQ8B/wMyAVEEAAMHAQkEAAMCAQMDAAEBWAABNAIzAVMB5QGKAXwB+AHmAY0BdwH5
        AYMBaQFlAckDBwEKMAADPwFvA+oB/wPZAf8BzAHLAckB/wG3AbkBrgH/AcIBygG7Af8B2QHjAdUB/wNB
        AXIgAAMQARYBggFuAUsB6QH8AbYBCgH/Ak4BTQGVBAADCgEOAygBPQMBAQJgAAHEAYEBdgHsAf8BkgF8
        Av8BkgF8Af8B6gGJAXwB+gG+AX4BcgHqAWoBXgFbAbMDIAEvJAADIwE0A1YBtAOYAf8DgwH/A3IB/wOH
        Af8DVwG4AyUBNyAAAxEBFwGCAW8BTQHqAf8BvQEVAf8BpgGCATQB9QJJAUgBiAMvAUoBaAFhAVcB2gM4
        AV5gAAHEAYEBdgHsAf8BkgF8Af8BmAFwAWoB1wH5AY0BfwH+Af8BkgF8Av8BkgF8Af8B1QGHAXkB8gMb
        ASYgAAM8AWYD5gH/A8QB/wG0AbIBsQH/AaQBogGYAf8BuwG8AbAB/wLeAdUB/wM/AWwgAAMRARcBigF3
        AVMB7AHNAaYBPgH8AasBhgFCAfUB5QGpATMB/wGxAYgBPgH4AbsBkAFBAfkBmQF+AU8B8QM4AV5cAAHE
        AYEBdgHsAf8BkgF8Af8DDwEUAwcBCQMZASMBcAFgAV4BuQH/AZIBfAH/AVoCUwGfIAADPAFmA+oB/wPZ
        Af8BzQHKAckB/wG/AbgBsgH/Ac8ByQHCAf8B5wHiAdwB/wM/AWwgAAMQARYBkgF8AVcB7gHAAZwBZAH5
        AlYBVQGxAWABXQFaAc0BoAGCAUwB8wG7AZIBTQH5AZoBgQFTAfEDOAFeXAABxAGBAXYB7AH/AZIBfAH/
        Aw8BFAgAAx8BLQH/AZIBfAH/AaYBdQFsAd8gAAMjATMDVgGzA5gB/wODAf8DcgH/A4cB/wNXAboDJQE3
        HAADAwEEAx8BLQGDAXMBYQHmAfEBvwFqAf8DOgFhAxIBGQMpAT4BcAFkAVoB2wM4AV5gAAHEAYEBdgHs
        Af8BkgF8Af8DDwEUCAABQQJAAW8B+QGNAX8B/gHqAYkBfAH6Ay8BShwAAzwBZgPmAf8DxAH/AbUCsQH/
        Aa0BngGcAf8ByAG6AbgB/wHrAd4B3QH/Az8BbBwAAx4BKwFhAV4BWQHMAc4BqQFyAfoB2AG7AXkB/AF5
        AWoBWAHiAzEBTQMBAQIDKgFAAwEBAmAAAcQBgQF2AewB/wGSAXwB/wMPARQEAAMFAQcB4gGKAXcB9wMd
        ASkDMwFSAZABbwFnAdMcAAM8AWYD6gH/A9kB/wHOAskB/wHHArUB/wHaAsgB/wHzAuIB/wM/AWwgAAMv
        AUkBhAF4AWEB5gHTAaoBYQH7A0IBdAMBAQIDAQECBAADAQECXAABNAIzAVMB5gGNAXcB+QHmAY0BdwH5
        AUcCRQF7BAADAwEEAcgBgQF2Ae4DMwFSAUUCRAF3AYMBaQFkAcgcAAMxAU0DPAFmAzwBZgM8AWYDPAFm
        AzwBZgM8AWYDMQFNHwABAQQAAzEBTgI+AT0BagMAAQEHAAEBAwIBA2AAAZUBcgFoAdYDLwFJAxYBHwHm
        AY0BdwH5AwYBCAQAAzABSwGQAW8BZwHTAYMBagFkAcgDIQEw2AABfAFnAWEBxAFLAkkBgwE7AjoBYQHC
        AYEBdAHrAwIBA+wAAxwBKAFwAWABXgG5AX0BZwFjAcUDKgFB/wAlAAFCAU0BPgcAAT4DAAEoAwABQAMA
        ASADAAEBAQABAQYAAQEWAAP/AQAE/wQAAeEB/wHhAf8EAAHgAf8B4AH/BAAB4AH/AeAB/wQAAeAB/wHg
        Af8EAAHwAR8B8AEfBAAB8AEPAfABDwQAAfABDwHwAQ8EAAHxAY8B8QGPBAAB8QGHAfEBhwQAAfEBBwHx
        AQcEAAHhAQcB4QEHBAAB4AGHAeABhwQAAeAB/wHgAf8EAAHhAf8B4QH/BAAE/wQADv8B4QH/AeABBwT/
        AeAB/wHgAQcB8AEHAv8B4AH/AfABDwHwAacC/wHgAf8B8AEPAfABjwL/AfABHwHwAQ8B8AEPAv8B8AEP
        AfABDwHwAQcC/wHwAQ8B8AEPAfABBwL/AfEBjwHwAQ8B4AEPAv8B8QGHAfABDwHgAQ8C/wHxAQcB8AEP
        AfABLwL/AeEBBwHwAQ8B6AGfAv8B4AGHBv8B4Af/AeEJ/ws=
</value>
  </data>
</root>